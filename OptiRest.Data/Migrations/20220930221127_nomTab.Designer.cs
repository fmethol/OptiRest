// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OptiRest.Data.Context;

#nullable disable

namespace OptiRest.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220930221127_nomTab")]
    partial class nomTab
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OptiRest.Data.Models.City", b =>
                {
                    b.Property<int>("cityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cityId"), 1L, 1);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stateId")
                        .HasColumnType("int");

                    b.HasKey("cityId");

                    b.HasIndex("stateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            cityId = 1,
                            city = "12 De Agosto",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 2,
                            city = "12 De Octubre",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 3,
                            city = "16 De Julio",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 4,
                            city = "17 De Agosto",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 5,
                            city = "20 De Junio",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 6,
                            city = "25 De Mayo",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 7,
                            city = "30 De Agosto",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 8,
                            city = "9 De Abril",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 9,
                            city = "9 De Julio",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 10,
                            city = "Abasto",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 11,
                            city = "Abbott",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 12,
                            city = "Abel",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 13,
                            city = "Abra De Hinojo",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 14,
                            city = "Acassuso",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 15,
                            city = "Aceilan",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 16,
                            city = "Acevedo",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 17,
                            city = "Achupallas",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 18,
                            city = "Adela",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 19,
                            city = "Adela Corti",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 20,
                            city = "Adela Saenz",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 21,
                            city = "Adolfo Alsina",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 22,
                            city = "Adolfo Gonzalez Chavez",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 23,
                            city = "Aeropuerto Ezeiza",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 24,
                            city = "Agote",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 25,
                            city = "Aguara",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 26,
                            city = "Aguas Corrientes",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 27,
                            city = "Aguas Verdes",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 28,
                            city = "Aguirrezabala",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 29,
                            city = "Agustin Mosconi",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 30,
                            city = "Agustin Roca",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 31,
                            city = "Agustina",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 32,
                            city = "Alagon",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 33,
                            city = "Alamos",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 34,
                            city = "Alastuey",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 35,
                            city = "Albariño",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 36,
                            city = "Alberdi",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 37,
                            city = "Alberti",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 38,
                            city = "Aldea Romana",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 39,
                            city = "Aldea San Andres",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 40,
                            city = "Aldecon",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 41,
                            city = "Aldo Bonzi",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 42,
                            city = "Alegre",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 43,
                            city = "Alejandro Korn",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 44,
                            city = "Alejandro Petion",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 45,
                            city = "Alfa",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 46,
                            city = "Alfalad",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 47,
                            city = "Alferez San Martin",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 48,
                            city = "Alfredo Demarchi",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 49,
                            city = "Algarrobo",
                            stateId = 1
                        },
                        new
                        {
                            cityId = 50,
                            city = "Almacen Castro",
                            stateId = 1
                        });
                });

            modelBuilder.Entity("OptiRest.Data.Models.Country", b =>
                {
                    b.Property<int>("countryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("countryId"), 1L, 1);

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("countryId");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            countryId = 1,
                            country = "Argentina"
                        });
                });

            modelBuilder.Entity("OptiRest.Data.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kitchenId")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tenantId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("OptiRest.Data.Models.Plato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Platos");
                });

            modelBuilder.Entity("OptiRest.Data.Models.State", b =>
                {
                    b.Property<int>("stateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stateId"), 1L, 1);

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("stateId");

                    b.HasIndex("countryId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            stateId = 1,
                            countryId = 1,
                            state = "Buenos Aires"
                        },
                        new
                        {
                            stateId = 5,
                            countryId = 1,
                            state = "Ciudad Autónoma de Buenos Aires"
                        },
                        new
                        {
                            stateId = 2,
                            countryId = 1,
                            state = "Catamarca"
                        },
                        new
                        {
                            stateId = 3,
                            countryId = 1,
                            state = "Chaco"
                        },
                        new
                        {
                            stateId = 4,
                            countryId = 1,
                            state = "Chubut"
                        },
                        new
                        {
                            stateId = 6,
                            countryId = 1,
                            state = "Córdoba"
                        },
                        new
                        {
                            stateId = 7,
                            countryId = 1,
                            state = "Corrientes"
                        },
                        new
                        {
                            stateId = 8,
                            countryId = 1,
                            state = "Entre Ríos"
                        },
                        new
                        {
                            stateId = 9,
                            countryId = 1,
                            state = "Formosa"
                        },
                        new
                        {
                            stateId = 10,
                            countryId = 1,
                            state = "Jujuy"
                        },
                        new
                        {
                            stateId = 11,
                            countryId = 1,
                            state = "La Pampa"
                        },
                        new
                        {
                            stateId = 12,
                            countryId = 1,
                            state = "La Rioja"
                        },
                        new
                        {
                            stateId = 13,
                            countryId = 1,
                            state = "Mendoza"
                        },
                        new
                        {
                            stateId = 14,
                            countryId = 1,
                            state = "Misiones"
                        },
                        new
                        {
                            stateId = 15,
                            countryId = 1,
                            state = "Neuquén"
                        },
                        new
                        {
                            stateId = 16,
                            countryId = 1,
                            state = "Río Negro"
                        },
                        new
                        {
                            stateId = 17,
                            countryId = 1,
                            state = "Salta"
                        },
                        new
                        {
                            stateId = 18,
                            countryId = 1,
                            state = "San Juan"
                        },
                        new
                        {
                            stateId = 19,
                            countryId = 1,
                            state = "San Luis"
                        },
                        new
                        {
                            stateId = 20,
                            countryId = 1,
                            state = "Santa Cruz"
                        },
                        new
                        {
                            stateId = 21,
                            countryId = 1,
                            state = "Santa Fe"
                        },
                        new
                        {
                            stateId = 22,
                            countryId = 1,
                            state = "Santiago del Estero"
                        },
                        new
                        {
                            stateId = 23,
                            countryId = 1,
                            state = "Tierra del Fuego"
                        },
                        new
                        {
                            stateId = 24,
                            countryId = 1,
                            state = "Tucumán"
                        });
                });

            modelBuilder.Entity("OptiRest.Data.Models.TakedRange", b =>
                {
                    b.Property<int>("takedRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("takedRangeId"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tenantId")
                        .HasColumnType("int");

                    b.HasKey("takedRangeId");

                    b.ToTable("TakedRanges");
                });

            modelBuilder.Entity("OptiRest.Data.Models.City", b =>
                {
                    b.HasOne("OptiRest.Data.Models.State", null)
                        .WithMany("Cities")
                        .HasForeignKey("stateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OptiRest.Data.Models.State", b =>
                {
                    b.HasOne("OptiRest.Data.Models.Country", null)
                        .WithMany("States")
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OptiRest.Data.Models.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("OptiRest.Data.Models.State", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
